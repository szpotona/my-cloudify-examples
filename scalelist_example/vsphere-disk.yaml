tosca_definitions_version: cloudify_dsl_1_3

imports:
  - http://www.getcloudify.org/spec/cloudify/6.3.2/types.yaml
  - plugin:cloudify-vsphere-plugin?version= >=2.19.11

dsl_definitions:
  connection_config: &connection_config
    username: { get_secret: vsphere_username }
    password: { get_secret: vsphere_password }
    host: { get_secret: vsphere_host }
    port: { get_secret: vsphere_port }
    datacenter_name: { get_secret: vsphere_datacenter_name }
    resource_pool_name: { get_secret: vsphere_resource_pool_name }
    auto_placement: { get_secret: vsphere_auto_placement }
    allow_insecure: true

inputs:
  busKey:
    type: integer

  server_name:
    type: string
    default: test

  disk_size:
    type: integer

  max_wait_time:
    type: integer
    default: 15

node_templates:

  wait_for_deployment:
    type: cloudify.nodes.SoftwareComponent
    interfaces:
      cloudify.interfaces.lifecycle:
        precreate:
          executor: central_deployment_agent
          implementation: scripts/wait_for_deployment.py
  vol:
    type: cloudify.vsphere.nodes.Storage
    properties:
      connection_config: *connection_config
      use_external_resource: false
      storage:
        storage_size: { get_input: disk_size }
        parent_key: { get_input: busKey }
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          inputs:
            max_wait_time: { get_input: max_wait_time }
    relationships:
      - type: cloudify.vsphere.storage_connected_to_server
        target: vm
      - type: cloudify.relationships.depends_on
        target: wait_for_deployment


  vm:
    type: cloudify.vsphere.nodes.Server
    properties:
      connection_config: *connection_config
      use_external_resource: true
      agent_config:
        install_method: none
      server:
        name: { get_input: server_name }

